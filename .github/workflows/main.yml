name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize

env:
  BUNDLE_PATH: vendor/bundle

jobs:
  lint-markdown:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            markdown:
              - '**.md'
              - '.remark*'
              - 'package.json'
              - 'yarn.lock'

      - name: Get Yarn cache directory path
        id: yarn-cache-dir-path
        if: steps.changes.outputs.markdown == 'true'
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn
        uses: actions/cache@v2
        if: steps.changes.outputs.markdown == 'true'
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Node.js packages
        if: steps.changes.outputs.markdown == 'true'
        run: yarn install --frozen-lockfile

      - name: Run Markdown linting
        if: steps.changes.outputs.markdown == 'true'
        run: yarn run remark

  lint-ruby:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set Up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Run Ruby linting
        run: ./bin/standardrb --no-fix

  build:
    runs-on: ubuntu-latest
    services:
      elasticsearch:
        image: elasticsearch:7.3.2
        ports:
          - 9200:9200
        env:
          "discovery.type": "single-node"
        options: >-
          --health-cmd "curl --silent --fail localhost:9200/_cluster/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Set Up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Get Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get -yqq install chromium-chromedriver
          yarn install --frozen-lockfile

      - name: Compile Assets
        run: |
          bundle exec rake webpacker:compile

      - name: Run Tests
        env:
          ELASTICSEARCH_URL: "http://localhost:9200"
        run: ./bin/rake test
